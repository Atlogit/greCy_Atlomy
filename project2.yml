title: "UD_Ancient_Greek-PROIEL"
description: "This project template lets you train a part-of-speech tagger, morphologizer and dependency parser from a [Universal Dependencies](https://universaldependencies.org/) corpus. It takes care of downloading the treebank, converting it to spaCy's format and training and evaluating the model. The template uses the [`UD_English-EWT`](https://github.com/UniversalDependencies/UD_English-EWT) treebank by default, but you can swap it out for any other available treebank. Just make sure to adjust the `lang` and treebank settings in the variables below. Use `xx` for multi-language if no language-specific tokenizer is available in spaCy. Note that multi-word tokens will be merged together when the corpus is converted since spaCy does not support multi-word token expansion."

spacy_version: ">=3.4,<4.1.2"
# Variables can be referenced across the project.yml using ${vars.var_name}
vars:
  config_setner: "senter"
  config_sm: "small"
  config_md: "medium"
  config_lg: "large"
  config_trf: "transformer"
  lang: "grc"
  treebank: "UD_Ancient_Greek-PROIEL"
  treebank_perseus: "UD_Ancient_Greek-Perseus"
  vectors_md: "grc_floret_cbow_nn2_xn10_b50k_dim300.floret"
  vectors_lg: "grc_floret_cbow_nn2_xn10_b200k_dim300.floret"
  train_name: "grc_proiel-ud-train"
  dev_name: "grc_proiel-ud-dev"
  test_name: "grc_proiel-ud-test"
  train_name_perseus: "grc_perseus-ud-train"
  dev_name_perseus: "grc_perseus-ud-dev"
  test_name_perseus: "grc_perseus-ud-test"
  #senter_source: "./training/small/senter"
  package_name: "ud_proiel"
  package_version: "3.4.0"
  gpu: -1

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.
directories: ["assets", "corpus","training", "metrics", "configs", "packages", "vectors"]

assets:
  - dest: "assets/${vars.treebank}"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.treebank}"
      branch: "master"
      path: ""

  - dest: "assets/${vars.treebank_perseus}"
    git:
      repo: "https://github.com/jmyerston/${vars.treebank_perseus}"
      branch: "master"
      path: ""

  - dest: 'assets/${vars.vectors_md}'
    url: 'https://zenodo.org/record/5733373/files/grc_floret_cbow_nn2_xn10_b50k_dim300.floret'

  - dest: 'assets/${vars.vectors_lg}'
    url: 'https://zenodo.org/record/5733373/files/grc_floret_cbow_nn2_xn10_b200k_dim300.floret'


workflows:
  all:
    - preprocess
    - train-senter
    - train-small
    - train-medium
    - train-large
    - package-small
    - package-medium
    - package-large
    - assemble-small
    - evaluate-large

commands:

  - name: preprocess
    help: "Convert the data to spaCy's format"
    script:
      - "mkdir -p corpus/${vars.treebank}"
      - "mkdir -p corpus/${vars.treebank_perseus}"
      - "mkdir -p vectors/medium"
      - "mkdir -p vectors/large"
      - "mkdir -p metrics/small"
      - "mkdir -p metrics/medium"
      - "mkdir -p metrics/large"
      - "mkdir -p metrics/transformer"
      - "python -m spacy convert assets/${vars.treebank}/${vars.train_name}.conllu corpus/${vars.treebank}/ --converter conllu --n-sents 10 --merge-subtokens"
      - "python -m spacy convert assets/${vars.treebank}/${vars.dev_name}.conllu corpus/${vars.treebank}/ --converter conllu --n-sents 10 --merge-subtokens"
      - "python -m spacy convert assets/${vars.treebank}/${vars.test_name}.conllu corpus/${vars.treebank}/ --converter conllu --n-sents 10 --merge-subtokens"
      - "python -m spacy convert assets/${vars.treebank_perseus}/${vars.train_name_perseus}.conllu corpus/${vars.treebank_perseus}/ --converter conllu --n-sents 10 --merge-subtokens"
      - "python -m spacy convert assets/${vars.treebank_perseus}/${vars.dev_name_perseus}.conllu corpus/${vars.treebank_perseus}/ --converter conllu --n-sents 10 --merge-subtokens"
      - "python -m spacy convert assets/${vars.treebank_perseus}/${vars.test_name_perseus}.conllu corpus/${vars.treebank_perseus}/ --converter conllu --n-sents 10 --merge-subtokens"
      - "mv corpus/${vars.treebank}/${vars.train_name}.spacy corpus/${vars.treebank}/train.spacy"
      - "mv corpus/${vars.treebank}/${vars.dev_name}.spacy corpus/${vars.treebank}/dev.spacy"
      - "mv corpus/${vars.treebank}/${vars.test_name}.spacy corpus/${vars.treebank}/test.spacy"
      - "mv corpus/${vars.treebank_perseus}/${vars.train_name_perseus}.spacy corpus/${vars.treebank_perseus}/train.spacy"
      - "mv corpus/${vars.treebank_perseus}/${vars.dev_name_perseus}.spacy corpus/${vars.treebank_perseus}/dev.spacy"
      - "mv corpus/${vars.treebank_perseus}/${vars.test_name_perseus}.spacy corpus/${vars.treebank_perseus}/test.spacy"
      - "python -m spacy init vectors ${vars.lang} assets/${vars.vectors_md} ./vectors/medium --mode floret"
      - "python -m spacy init vectors ${vars.lang} assets/${vars.vectors_lg} ./vectors/large --mode floret"

    deps:
      - "assets/${vars.treebank}/${vars.train_name}.conllu"
      - "assets/${vars.treebank}/${vars.dev_name}.conllu"
      - "assets/${vars.treebank}/${vars.test_name}.conllu"
      - "assets/${vars.treebank}/${vars.test_name}.conllu"
    outputs:
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "vectors/${vars.vectors_md}"
      - "vectors/${vars.vectors_lg}"

  - name: train-senter
    help: "Train ${vars.treebank}"
    script:
      - "mkdir -p training/senter"
      - "python -m spacy train configs/senter.cfg --output training/senter --gpu-id ${vars.gpu} --paths.train corpus/${vars.treebank_perseus}/train.spacy --paths.dev corpus/${vars.treebank_perseus}/dev.spacy --nlp.lang=${vars.lang}"
    deps:
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "configs/${vars.config_sm}.cfg"
    outputs:
      - "training/small/${vars.treebank}/model-best"

  - name: assemble-small
    help: "Assemble full pipeline"
    script:
      - "python -m spacy assemble configs/assemble.cfg training/small/final/${vars.treebank} --nlp.lang ${vars.lang} --paths.train corpus/${vars.treebank}/train.spacy --paths.dev corpus/${vars.treebank}/dev.spacy --paths.tagger_source training/small/${vars.treebank}/model-best --paths.senter_source training/senter/model-best"
    deps:
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "configs/assemble.cfg"
      - "training/small/${vars.treebank}/model-best"
    outputs:
      - "training/${vars.treebank}/final"

  - name: train-small
    help: "Train ${vars.treebank}"
    script:
      - "mkdir -p training/small"
      - "python -m spacy train configs/${vars.config_sm}.cfg --output training/small/${vars.treebank} --gpu-id ${vars.gpu} --paths.train corpus/${vars.treebank}/train.spacy --paths.dev corpus/${vars.treebank}/dev.spacy  --components.senter.source training/senter/model-best --nlp.lang=${vars.lang}"
    deps:
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "configs/${vars.config_sm}.cfg"
    outputs:
      - "training/small/${vars.treebank}/model-best"

  - name: package-small
    help: "Package the trained model so it can be installed"
    script:
      - "python -m spacy package training/small/final/${vars.treebank} packages --name ${vars.package_name}_sm --version ${vars.package_version} --build wheel --force"
    deps:
      - "training/small/${vars.treebank}/model-best"
    outputs_no_cache:
      - "packages/${vars.lang}_${vars.package_name}_sm-${vars.package_version}/dist/grc_${vars.package_name}config_sm-${vars.package_version}.tar.gz"

  - name: train-medium
    help: "Train ${vars.treebank}"
    script:
      - "mkdir -p training/medium"
      - "python -m spacy train configs/${vars.config_md}.cfg --output training/medium/${vars.treebank} --gpu-id ${vars.gpu} --paths.train corpus/${vars.treebank}/train.spacy --paths.dev corpus/${vars.treebank}/dev.spacy  --paths.vectors/vectors/medium --nlp.lang=${vars.lang}"
    deps:
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "configs/${vars.config_md}.cfg"
    outputs:
      - "training/medium/${vars.treebank}/model-best"

  - name: package-medium
    help: "Package the trained model so it can be installed"
    script:
      - "python -m spacy package training/medium/${vars.treebank}/model-best packages --name ${vars.package_name}_md --version ${vars.package_version} --build wheel --force"
    deps:
      - "training/medium/${vars.treebank}/model-best"
    outputs_no_cache:
      - "packages/${vars.lang}_${vars.package_name}_md-${vars.package_version}/dist/grc_${vars.package_name}config_md-${vars.package_version}.tar.gz"

  - name: train-large
    help: "Train ${vars.treebank}"
    script:
      - "mkdir -p training/large"
      - "python -m spacy train configs/${vars.config_lg}.cfg --output training/large/${vars.treebank} --gpu-id ${vars.gpu} --paths.train corpus/${vars.treebank}/train.spacy --paths.dev corpus/${vars.treebank}/dev.spacy --paths.vectors/vectors/large --nlp.lang=${vars.lang}"
    deps:
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "configs/${vars.config_lg}.cfg"
    outputs:
      - "training/large/${vars.treebank}/model-best"

  - name: package-large
    help: "Package the trained model so it can be installed"
    script:
      - "python -m spacy package training/large/${vars.treebank}/model-best packages --name ${vars.package_name}_lg --version ${vars.package_version} --build wheel --force"
    deps:
      - "training/large/${vars.treebank}/model-best"
    outputs_no_cache:
      - "packages/${vars.lang}_${vars.package_name}_lg-${vars.package_version}/dist/grc_${vars.package_name}config_lg-${vars.package_version}.tar.gz"

  - name: train-transformer
    help: "Train ${vars.treebank}"
    script:
      - "mkdir -p training/transformer"
      - "python -m spacy train configs/${vars.config_trf}.cfg --output training/transformer/${vars.treebank} --gpu-id ${vars.gpu} --paths.train corpus/${vars.treebank}/train.spacy --paths.dev corpus/${vars.treebank}/dev.spacy --nlp.lang=${vars.lang}"
    deps:
      - "corpus/${vars.treebank}/train.spacy"
      - "corpus/${vars.treebank}/dev.spacy"
      - "configs/${vars.config_trf}.cfg"
    outputs:
      - "training/transformer/${vars.treebank}/model-best"

  - name: package-transformer
    help: "Package the trained model so it can be installed"
    script:
      - "python -m spacy package training/transformer/${vars.treebank}/model-best packages --name ${vars.package_name}_trf --version ${vars.package_version} --build wheel --force"
    deps:
      - "training/transformer/${vars.treebank}/model-best"
    outputs_no_cache:
      - "packages/${vars.lang}_${vars.package_name}_trf-${vars.package_version}/dist/grc_${vars.package_name}config_trf-${vars.package_version}.tar.gz"

  - name: evaluate-large
    help: "Evaluate on the test data and save the metrics"
    script:
      - "python -m spacy evaluate ./training/large/${vars.treebank}/model-best ./corpus/${vars.treebank}/test.spacy --output ./metrics/large/${vars.treebank}_lg.json --gpu-id ${vars.gpu}"
    deps:
      - "training/large/${vars.treebank}/model-best"
      - "corpus/${vars.treebank}/test.spacy"
    outputs:
      - "metrics/large/${vars.treebank}.json"

  - name: evaluate-transformer
    help: "Evaluate on the test data and save the metrics"
    script:
      - "python -m spacy evaluate ./training/transformer/${vars.treebank}/model-best ./corpus/${vars.treebank}/test.spacy --output ./metrics/large/${vars.treebank}_trf.json --gpu-id ${vars.gpu}"
    deps:
      - "training/transformer/${vars.treebank}/model-best"
      - "corpus/${vars.treebank}/test.spacy"
    outputs:
      - "metrics/large/${vars.treebank}.json"

  - name: clean
    help: "Clean directories"
    script:
      - "rm -rf assets"
      - "rm -rf corpus"
      - "rm -rf packages"
      - "rm -rf metrics"
      - "rm -rf training"
      - "rm -rf vectors"
      - "rm project.lock"
       

